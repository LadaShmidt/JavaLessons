package Algorithm;
/*
    Big O нотация - это способ определения скорости роста алгоритма, который описывает,
    Как быстро увеличивается время выполнения алгоритма при увеличении размера входных данных.

    Виды Big O нотации:

    O(1) - постоянное время выполнения, независимо от размера входных данных ()
    O(log n) - логарифмическое время выполнения, увеличивается медленнее, чем линейное (binary search)
    O(n) - линейное время выполнения, увеличивается пропорционально размеру входных данных (linear search)
    O(n log n) - время выполнения увеличивается быстрее, чем линейное, но медленнее, чем квадратичное
    O(n^2) - квадратичное время выполнения, увеличивается пропорционально квадрату размера входных данных (bubble sort)
    O(2^n) - экспоненциальное время выполнения, растет очень быстро и становится непрактичным для больших входных данных
*/
public class BigO {
}
