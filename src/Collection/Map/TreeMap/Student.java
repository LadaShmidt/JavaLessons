package Collection.Map.TreeMap;
/*
        TreeMap в Java - это класс, который реализует интерфейс SortedMap, используя структуру данных красно-черного дерева.

        Основные особенности TreeMap:
        Отсортированные ключи: TreeMap хранит ключи в отсортированном порядке,
        что обеспечивает быстрый доступ к элементам по ключу и позволяет быстро находить элементы, находящиеся в диапазоне ключей.

        Быстрый поиск: TreeMap предоставляет методы для быстрого поиска элементов по ключу,
        такие как get(), containsKey(), floorKey(), ceilingKey(), lowerKey() и higherKey().

        Поддержка диапазона: TreeMap предоставляет методы для поиска элементов,
        находящихся в заданном диапазоне ключей, такие как subMap(), headMap() и tailMap().

        Надежность: TreeMap гарантирует, что ключи хранятся в упорядоченном виде,
        используя красно-черное дерево, что обеспечивает быстрый доступ к элементам по ключу.

        Однако, TreeMap требует больше памяти, чем HashMap, и его производительность может снижаться
        при выполнении операций вставки и удаления элементов.

        Поэтому, если необходимо много операций вставки и удаления элементов, то лучше использовать HashMap.
        Если же необходима сортировка элементов по ключам или быстрый доступ к элементам по ключу, то следует использовать TreeMap.

        В TreeMap время поиска элемента в BigO notation равно O(log n), где n - это количество элементов в TreeMap.

        TreeMap использует красно-черное дерево для хранения элементов, что гарантирует,
        что элементы будут храниться в отсортированном порядке по ключам.
        Поэтому, при поиске элемента в TreeMap, дерево может быть разбито на половины на каждом шаге поиска,
        что обеспечивает быстрый поиск и логарифмическое время в среднем и худшем случае.
        Это делает TreeMap хорошим выбором для поиска элементов по ключу в большом наборе данных.
    */
public class Student implements Comparable<Student>{
    String name;
    String surname;
    int course;

    Student(String name, String surname, int course) {
        this.name = name;
        this.surname = surname;
        this.course = course;
    }

    @Override
    public int compareTo(Student anotherStudent) {
        return this.course - anotherStudent.course;
    }

    @Override
    public String toString() {
        return name + " " + surname + " " + course;
    }
}
